name: Build Application

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        description: "The version to build"
      should_build:
        required: false
        type: boolean
        default: true
        description: "Whether to build the application"
      validate_only:
        required: false
        type: boolean
        default: false
        description: "Only run validation without building"
    outputs:
      macos_aarch64_artifact:
        description: "Name of the macOS ARM64 build artifact"
        value: circle-camera-macos-aarch64
      macos_x64_artifact:
        description: "Name of the macOS x64 build artifact"
        value: circle-camera-macos-x64
  workflow_dispatch:
    inputs:
      version:
        required: false
        type: string
        description: "Version override (uses package.json if not provided)"
      should_build:
        required: false
        type: boolean
        default: true
        description: "Whether to build the application"
      validate_only:
        required: false
        type: boolean
        default: false
        description: "Only run validation without building"

jobs:
  validate:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: true

      - name: Run validation
        run: pnpm run validate

  build-macos:
    runs-on: macos-latest
    if: inputs.validate_only == 'false'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: Install additional dependencies
        run: |
          rustup target add aarch64-apple-darwin x86_64-apple-darwin
          rustup default stable
          rustup show
          cargo --version

      - name: Install PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: true

      - name: Setup Node.js with PNPM cache
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Get version from package.json if not provided
        if: inputs.version == ''
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version from package.json: $VERSION"

      - name: Set provided version
        if: inputs.version != ''
        run: |
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          echo "Using provided version: ${{ inputs.version }}"

      - name: Build for macOS (Apple Silicon)
        run: pnpm tauri build --target aarch64-apple-darwin

      - name: Build for macOS (Intel)
        run: pnpm tauri build --target x86_64-apple-darwin

      - name: Upload macOS (Apple Silicon) Artifact 
        uses: actions/upload-artifact@v4
        with:
          name: circle-camera-macos-aarch64
          path: src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg

      - name: Upload macOS (Intel) Artifact
        uses: actions/upload-artifact@v4
        with:
          name: circle-camera-macos-x64
          path: src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg